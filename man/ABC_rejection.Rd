% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ABC_rejection.R
\name{ABC_rejection}
\alias{ABC_rejection}
\title{routepath rejection sampling scheme using Approximate Bayesian Computation}
\usage{
ABC_rejection(
  input_data,
  model,
  priors,
  known_routes,
  validation = "euclidean",
  summary_function = NULL,
  tol = NULL,
  ncores = 1,
  spatial = TRUE,
  expand = 10
)
}
\arguments{
\item{input_data}{\code{list} Data used in the routepath ABC modelling procedure}

\item{model}{\code{function} Model to be used when simulating routes. This function requires that a \code{conductanceMatrix} is returned}

\item{priors}{\code{Matrix} Prior parameter values}

\item{known_routes}{\code{sf line} Known routes to compare against the simulated routes}

\item{validation}{\code{character} Validation method used to assess fit of least-cost path against known route. Implemented methods include: 'euclidean' (Default), 'pdi', 'frechet', 'hausdorff'}

\item{summary_function}{\code{function} If function supplied then this function is used to summarise the distance measurements for all modelled roads to a single value. Default is NULL}

\item{tol}{\code{numeric} Maximum distance between simulated routes and the known route for the two lines to still be deemed equal. All simulated routes and their parameters that result in a simulated route with a maximum distance from the known route above this value are rejected}

\item{ncores}{\code{numeric} Number of cores used during the routepath ABC procedure. Default value is 1}

\item{spatial}{\code{logical} if TRUE (default) then sf object returned. if FALSE then sf geometry is dropped and a data.frame is returned}

\item{expand}{\code{numeric} Maximum resolution multiplier used to expand the window around the known route when cropping SpatRaster objects in input_data. Default is a value of 10. For example, if the maximum resolution of the SpatRaster object is 100m and the expand value is 10 the window will be buffered by 1,000m (100m*10).}
}
\value{
\code{routepath}
}
\description{
Launches a series of model simulations using user-supplied prior parameter values. See details for more information
}
\details{
xxx
}
\examples{

library(leastcostpath)

r <- terra::rast(system.file("extdata/SICILY_1000m.tif", package="leastcostpath"))
slope_cs <- create_slope_cs(x = r, cost_function = "tobler", neighbours = 4)
locs <- sf::st_sf(geometry = sf::st_sfc(
sf::st_point(c(839769, 4199443)),
sf::st_point(c(1038608, 4100024)),
crs = terra::crs(r)))

known_route <- leastcostpath::create_lcp(x = slope_cs, origin = locs[1,],
                                         destination = locs[2,], cost_distance = FALSE)

input_data <- list(r)

nsims <- 10
priors <- cbind(a = 1, b = rnorm(n = nsims, mean = 3.5, sd = 1),
c = rnorm(n = nsims, mean = 0.05, sd = 0.1))

model <- function(x, y) {
slope_cs <- leastcostpath::create_slope_cs(x = x[[1]],
cost_function = function(x) {(y[1] * exp(-y[2] * abs(x + y[3]))) / 3.6},
neighbours = 4)

return(slope_cs)
}

routepath <- ABC_rejection(input_data = input_data, model = model,
priors = priors, known_routes = known_route, validation = "euclidean", tol = NULL)
}
\author{
Joseph Lewis
}
